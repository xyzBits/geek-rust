
/// 把某种特定的数据封闭在某个数据结构中
/// 这个数据结构就是一个容器，
/// 它是一个包裹了 T 的 存在或者不存在的容器
///
/// 切片是描述一组属于同一类型，长度不确定，在内存中连续存放的数据结构
///
/// &[T] 只读切片引用
/// &mut[T] 可写的切片引用
/// Box<[T]> 堆上分配的切片
///

fn main() {
    let arr = [1, 2, 3, 4, 5];
    let vec = vec![1, 2, 3, 4, 5];

    let s1 = &arr[..2];
    let s2 = &vec[..2];

    // &[T] &[T] 是否相等取决于长度和内容是否相等
    assert_eq!(s1, s2);

    // &[T] Vec<T> [T;N] 比较，看长度和内容
    assert_eq!(&arr[..], vec);
    assert_eq!(&vec[..], arr);


}